{"version":3,"file":"src_app_pages_chat-rooms_chat-rooms_module_ts.js","mappings":";;;;;;;;;;;;;AAAA,iEAAe,uLAAuL,2BAA2B,gbAAgb,8DAA8D,mBAAmB,mBAAmB,2BAA2B,cAAc,0BAA0B,cAAc,2DAA2D,+CAA+C,0tBAA0tB;;;;;;;;;;;;;;;;;;;ACAjmD;AACc;AAEL;AAElD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAa;KACzB;CACF,CAAC;IAMW,0BAA0B,SAA1B,0BAA0B;CAAG;AAA7B,0BAA0B;IAJtC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBE;AACM;AACF;AAEA;AAE4B;AAEvB;IAWrC,mBAAmB,SAAnB,mBAAmB;CAAG;AAAtB,mBAAmB;IAT/B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,kFAA0B;SAC3B;QACD,YAAY,EAAE,CAAC,2DAAa,CAAC;KAC9B,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACnB2B;AACjB;AAEuB;AAC1B;IAO1B,aAAa,SAAb,aAAa;IAQxB,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAHpE,WAAM,GAAG,EAAE,CAAC;QACZ,SAAI,GAAG,IAAI,CAAC;IAE4D,CAAC;IAEnE,QAAQ;;YACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC5E,CAAC;KAAA;IAED,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YAC9E,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACzE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI;QACF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;IAC7D,CAAC;CACF;;YAjCO,+DAAW;YACX,mDAAM;;;sBASX,oDAAS,SAAC,sDAAU;;AAFV,aAAa;IALzB,wDAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,yNAAqC;;KAEtC,CAAC;GACW,aAAa,CAyBzB;AAzByB","sources":["./src/app/pages/chat-rooms/chat-rooms.page.html","./src/app/pages/chat-rooms/chat-rooms-routing.module.ts","./src/app/pages/chat-rooms/chat-rooms.module.ts","./src/app/pages/chat-rooms/chat-rooms.page.ts"],"sourcesContent":["export default \"<ion-header translucent=\\\"true\\\">\\n<ion-toolbar>\\n  <ion-buttons slot=\\\"start\\\">\\n    <ion-menu-button></ion-menu-button>\\n  </ion-buttons>\\n  <ion-title color = \\\"primary\\\">\\n    {{this.chatService.chatName}}\\n  </ion-title>\\n  <ion-buttons slot=\\\"start\\\">\\n    <ion-icon (click)=\\\"back()\\\" color=\\\"primary\\\" slot=\\\"icon-only\\\" name=\\\"chevron-back-outline\\\"></ion-icon>\\n  </ion-buttons>\\n</ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <ion-grid>\\n    <ion-row *ngFor=\\\"let message of messages | async\\\">\\n      <ion-col size=\\\"9\\\" class=\\\"message\\\" [offset]=\\\"message.myMsg ? 3 : 0\\\"\\n               [ngClass]=\\\"{ 'my-message': message.myMsg, 'other-message': !message.myMsg }\\\">\\n        <b>{{ message.fromName }}</b><br>\\n        <span>{{ message.msg }}</span>\\n        <span>{{ message.msg }}</span>\\n        <div class=\\\"time ion-text-right\\\"><br>{{ message.createdAt?.toMillis() | date:'short' }}</div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\\n\\n<ion-footer>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-row class=\\\"ion-align-items-center\\\">\\n      <ion-col size=\\\"10\\\" >\\n        <ion-textarea color=\\\"dark\\\" class=\\\"message-input\\\" autoGrow=\\\"true\\\" rows=\\\"1\\\" maxLength=\\\"500\\\" [(ngModel)]=\\\"newMsg\\\" >\\n        </ion-textarea>\\n      </ion-col>\\n      <ion-col size=\\\"2\\\">\\n        <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" color=\\\"primary\\\" [disabled]=\\\"newMsg === ''\\\"\\n                    class=\\\"msg-btn\\\" (click)=\\\"sendMessage()\\\">\\n          <ion-icon name=\\\"send\\\" slot=\\\"icon-only\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-toolbar>\\n</ion-footer>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatRoomsPage } from './chat-rooms.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatRoomsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatRoomsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatRoomsPageRoutingModule } from './chat-rooms-routing.module';\n\nimport { ChatRoomsPage } from './chat-rooms.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChatRoomsPageRoutingModule\n  ],\n  declarations: [ChatRoomsPage]\n})\nexport class ChatRoomsPageModule {}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {IonContent} from \"@ionic/angular\";\nimport {Observable} from \"rxjs\";\nimport {ChatService, Message} from \"../../services/chat.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-chat-rooms',\n  templateUrl: './chat-rooms.page.html',\n  styleUrls: ['./chat-rooms.page.scss'],\n})\nexport class ChatRoomsPage implements OnInit {\n\n  @ViewChild(IonContent) content: IonContent;\n\n  messages: Observable<Message[]>;\n  newMsg = '';\n  text = true;\n\n  constructor(private chatService: ChatService, private router: Router) { }\n\n  async ngOnInit() {\n    this.messages = this.chatService.getChatMessages(this.chatService.chatId);\n  }\n\n  sendMessage() {\n    this.chatService.addChatMessage(this.newMsg, this.chatService.chatId).then(() => {\n      this.chatService.returnChatMessage(this.newMsg, this.chatService.chatId);\n      this.newMsg = '';\n      this.content.scrollToBottom();\n    });\n  }\n\n  back() {\n    this.router.navigateByUrl('tabs/home', {replaceUrl: true});\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}