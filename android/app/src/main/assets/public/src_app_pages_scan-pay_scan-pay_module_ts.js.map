{"version":3,"file":"src_app_pages_scan-pay_scan-pay_module_ts.js","mappings":"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","sources":["./src/app/pages/scan-pay/scan-pay.page.html","./src/app/pages/scan-pay/scan-pay-routing.module.ts","./src/app/pages/scan-pay/scan-pay.module.ts","./src/app/pages/scan-pay/scan-pay.page.ts"],"sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Scan to Pay</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"titles\\\" >\\n    <ion-text  color=\\\"primary\\\" style=\\\"font-size: 20px; font-weight: bold;\\\">Recipient: {{this.iroha.result.split('@')[0]}}</ion-text>\\n  </div>\\n  <div class=\\\"ion-padding\\\">\\n  <form [formGroup]=\\\"form\\\" class=\\\"ion-margin\\\">\\n    <div class=\\\"ion-margin-vertical\\\">\\n      <ion-item lines=\\\"full\\\" color=\\\"light\\\" >\\n        <ion-input formControlName=\\\"amount\\\" [type]=\\\"type ? 'text' : 'text'\\\" placeholder=\\\"Enter amount to transfer\\\"></ion-input>\\n      </ion-item>\\n      <ion-text\\n        color=\\\"danger\\\"\\n        *ngIf=\\\"!form.get('amount').valid && form.get('amount').touched\\\">\\n        <ion-text\\n          class=\\\"error\\\"\\n          *ngIf=\\\"form.get('amount').hasError('required')\\\">\\n          * Please enter the amount\\n        </ion-text>\\n        <!-- for email error -->\\n        <ion-text\\n          class=\\\"error\\\"\\n          *ngIf=\\\"!form.get('amount').hasError('required') && form.get('amount').hasError('pattern')\\\">\\n          * Please enter a proper amount\\n        </ion-text>\\n      </ion-text>\\n    </div>\\n    <div class=\\\"ion-margin-vertical\\\">\\n      <ion-item lines=\\\"full\\\" color=\\\"light\\\">\\n        <ion-input formControlName=\\\"reference\\\" [type]=\\\"type ? 'text' : 'text'\\\" placeholder=\\\"Enter reference\\\"></ion-input>\\n      </ion-item>\\n      <ion-text\\n        color=\\\"danger\\\"\\n        *ngIf=\\\"!form.get('reference').valid && form.get('reference').touched\\\">\\n        <ion-text\\n          class=\\\"error\\\"\\n          *ngIf=\\\"form.get('reference').hasError('required')\\\">\\n          * Please enter the reference\\n        </ion-text>\\n        <!-- for reference error -->\\n        <ion-text\\n          class=\\\"error\\\"\\n          *ngIf=\\\"!form.get('reference').hasError('required')\\n          && form.get('reference')\\\">\\n          * Please enter the payment reference\\n        </ion-text>\\n      </ion-text>\\n    </div>\\n  </form>\\n  </div>\\n  <div class=\\\"ion-margin-horizontal\\\">\\n    <ion-button\\n      *ngIf=\\\"!isLoading\\\"\\n      class=\\\"ion-margin-horizontal\\\"\\n      size=\\\"large\\\"\\n      expand=\\\"block\\\"\\n      shape=\\\"round\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"biometricAuth()\\\">\\n      <ion-text>Confirm</ion-text>\\n    </ion-button>\\n    <ion-button\\n      *ngIf=\\\"isLoading\\\"\\n      class=\\\"ion-margin-horizontal\\\"\\n      size=\\\"large\\\"\\n      expand=\\\"block\\\"\\n      shape=\\\"round\\\"\\n      color=\\\"primary\\\">\\n      <ion-spinner></ion-spinner>\\n    </ion-button>\\n  </div>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ScanPayPage } from './scan-pay.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ScanPayPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ScanPayPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ScanPayPageRoutingModule } from './scan-pay-routing.module';\n\nimport { ScanPayPage } from './scan-pay.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ScanPayPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ScanPayPage]\n})\nexport class ScanPayPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {IrohaService} from \"../../services/iroha.service\";\nimport {AlertController, LoadingController} from \"@ionic/angular\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {AvailableResult, BiometryType, Credentials, NativeBiometric} from \"capacitor-native-biometric\";\nimport {Router} from \"@angular/router\";\nimport {doc, Firestore, getDoc} from \"@angular/fire/firestore\";\nimport {AngularFireAuth} from \"@angular/fire/compat/auth\";\n\n@Component({\n  selector: 'app-scan-pay',\n  templateUrl: './scan-pay.page.html',\n  styleUrls: ['./scan-pay.page.scss'],\n})\nexport class ScanPayPage implements OnInit {\n\n  form: FormGroup;\n  isLoading: boolean;\n  type = true;\n  private loading: any;\n  private currentUser: any;\n\n  constructor(private iroha: IrohaService,\n              private alertController: AlertController,\n              private loadingController: LoadingController,\n              private router: Router,\n              private _firestore: Firestore,\n              private afAuth: AngularFireAuth) {\n    this.afAuth.onAuthStateChanged(user => {\n      this.currentUser = user;\n    });\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.form = new FormGroup({\n      amount: new FormControl(null, {validators: [Validators.required, Validators.pattern('^[0-9]*$')] }),\n      reference: new FormControl(null, {validators: [Validators.required]}), // added email validator also\n    });\n  }\n\n  biometricAuth() {\n    NativeBiometric.isAvailable().then(\n      async (result: AvailableResult) => {\n        const isAvailable = result.isAvailable;\n        const isFaceId = result.biometryType === BiometryType.FACE_ID;\n\n        if (isAvailable) {\n          // Get user's credentials\n          NativeBiometric.getCredentials({\n            server: 'chainfox',\n          }).then((credentials: Credentials) => {\n            // Authenticate using biometrics before logging the user in\n            NativeBiometric.verifyIdentity({\n              reason: 'Scan to verify payments',\n              title: 'Log in',\n              subtitle: 'Maybe add subtitle here?',\n              description: 'Maybe a description too?',\n            }).then(\n              () => {\n                // Authentication successful\n                this.onSubmit();\n              },\n              (error) => {\n                // Failed to authenticate\n              }\n            );\n          });\n        } else {\n          await this.presentPrompt();\n        }\n      },\n      async (error) => {\n        // Couldn't check availability\n        await this.presentPrompt();\n      }\n    );\n  }\n\n  async onSubmit() {\n    if(!this.form.valid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n    this.loadingController.create({\n      message: 'Sending coins...',\n    }).then(async overlay => {\n      this.loading = overlay;\n      this.loading.present();\n      // eslint-disable-next-line no-underscore-dangle\n      await this.pay(this.form.value.reference, this.form.value.amount)\n        .then(async d => {\n          this.iroha.wallet.balance = '0';\n          await this.iroha.setBalance(this.iroha.wallet.name + '@test');\n          this.loading.dismiss();\n          // eslint-disable-next-line max-len\n          await this.showAlert('Transfer Success', 'You have sent RM' + this.form.value.amount + ' to ' + this.iroha.result.split('@')[0] + '.');\n          this.form.reset();\n        })\n        .catch(e => {\n          this.loading.dismiss();\n          this.showAlert('Transfer Failed', e);\n        });\n    });\n  }\n\n  async pay(message, amount) {\n    await this.iroha.payment(this.iroha.result, message, amount);\n  }\n\n  async presentPrompt() {\n    const alert = await this.alertController.create({\n      header: 'User verification',\n      inputs: [\n        {\n          name: 'password',\n          placeholder: 'Password',\n          type: 'password'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: data => {\n            console.log('Cancel clicked');\n          }\n        },\n        {\n          text: 'Confirm',\n          handler: async data => {\n            this.loadingController.create({\n              message: 'Verifying...',\n            }).then(async overlay => {\n              this.loading = overlay;\n              this.loading.present();\n              await this.iroha.getAccDetail('sec');\n              if (data.password === this.iroha.pw) {\n                this.loading.dismiss();\n                await this.onSubmit();\n              }\n              else {\n                this.loading.dismiss();\n                await this.showAlert('Verification Failed', 'You entered the wrong password');\n                await this.router.navigate(['tabs']);\n              }\n            });\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async showAlert(header, message) {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: ['Ok'],\n    });\n\n    await alert.present();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}