{"version":3,"file":"src_app_pages_verify-email-address_verify-email-address_module_ts.js","mappings":"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","sources":["./src/app/pages/verify-email-address/verify-email-address.page.html","./src/app/pages/verify-email-address/verify-email-address-routing.module.ts","./src/app/pages/verify-email-address/verify-email-address.module.ts","./src/app/pages/verify-email-address/verify-email-address.page.ts"],"sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Verify email address</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"ion-padding\\\">\\n<p>Please check your email inbox or junk and verify your email address.</p>\\n  <p>You cannot proceed with this app with verifying your email.</p>\\n  <p>Your unverified new account will be deleted within 1 hour. You can use your account once it's verified.</p>\\n  <div class=\\\"ion-padding\\\" *ngIf=\\\"!isLoading\\\">\\n    <ion-button (click)=\\\"unlock()\\\" expand=\\\"block\\\" class=\\\"main-button\\\">\\n      <ion-text class = ion-margin-horizontal >Email Verified</ion-text>\\n      <ion-icon class = ion-margin-horizontal name=\\\"arrow-forward-circle-outline\\\"></ion-icon>\\n    </ion-button>\\n  </div>\\n    <div class=\\\"ion-padding\\\" *ngIf=\\\"isLoading\\\">\\n      <ion-button (click)=\\\"unlock()\\\" expand=\\\"block\\\" class=\\\"main-button\\\">\\n        <ion-spinner></ion-spinner>\\n      </ion-button>\\n    </div>\\n    <div class=\\\"ion-padding\\\" *ngIf=\\\"!isLoading1\\\">\\n      <ion-button (click)=\\\"resend()\\\" expand=\\\"block\\\" class=\\\"main-button\\\">\\n        <ion-text class = ion-margin-horizontal >Resend verification email</ion-text>\\n        <ion-icon class = ion-margin-horizontal name=\\\"arrow-forward-circle-outline\\\"></ion-icon>\\n      </ion-button>\\n    </div>\\n    <div class=\\\"ion-padding\\\" *ngIf=\\\"isLoading1\\\">\\n      <ion-button (click)=\\\"unlock()\\\" expand=\\\"block\\\" class=\\\"main-button\\\">\\n        <ion-spinner></ion-spinner>\\n      </ion-button>\\n    </div>\\n  <p> Login with another account?</p>\\n  <div class=\\\"ion-padding\\\">\\n    <ion-button (click)=\\\"switch()\\\" expand=\\\"block\\\" class=\\\"main-button\\\">\\n      <ion-text class = ion-margin-horizontal >Switch Account</ion-text>\\n      <ion-icon class = ion-margin-horizontal name=\\\"arrow-forward-circle-outline\\\"></ion-icon>\\n    </ion-button>\\n  </div>\\n  </div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VerifyEmailAddressPage } from './verify-email-address.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VerifyEmailAddressPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VerifyEmailAddressPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VerifyEmailAddressPageRoutingModule } from './verify-email-address-routing.module';\n\nimport { VerifyEmailAddressPage } from './verify-email-address.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    VerifyEmailAddressPageRoutingModule\n  ],\n  declarations: [VerifyEmailAddressPage]\n})\nexport class VerifyEmailAddressPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AuthService} from \"../../services/auth/auth.service\";\nimport {AlertController, LoadingController, MenuController} from \"@ionic/angular\";\nimport {doc, Firestore, getDoc} from \"@angular/fire/firestore\";\nimport {StorageService} from \"../../services/storage/storage.service\";\nimport {SplashScreen} from \"@capacitor/splash-screen\";\n\n@Component({\n  selector: 'app-verify-email-address',\n  templateUrl: './verify-email-address.page.html',\n  styleUrls: ['./verify-email-address.page.scss'],\n})\nexport class VerifyEmailAddressPage implements OnInit {\n  isLoading = false;\n  isLoading1 = false;\n  constructor(private router: Router,\n              private ionicAuthService: AuthService,\n              private alertController: AlertController,\n              private _firestore: Firestore,\n              private storage: StorageService,\n              private menu: MenuController,) {\n  }\n\n\n  async ionViewDidLeave() {\n    await this.menu.enable(true);\n  }\n\n  async ionViewDidEnter() {\n    this.ionicAuthService.isLoadingSignUp = false;\n  }\n\n  async ngOnInit() {\n    await this.menu.enable(false);\n    await SplashScreen.hide();\n  }\n\n  async unlock() {\n    this.isLoading = true;\n    const docRef1 = doc(this._firestore, 'users', this.ionicAuthService.currentUser.uid);\n    const docSnap1 = await getDoc(docRef1);\n    const username1 = await this.storage.get(docSnap1.data().username);\n    await this.ionicAuthService.reAuth(docSnap1.data().email, username1);\n    if (await this.ionicAuthService.checkVerify() === true) {\n      this.isLoading = false;\n      await this.showAlert('Verification Success', 'Email has been verified! You can now login to your account.');\n      await this.router.navigate(['auth-screen']);\n    }\n    else {\n      this.isLoading = false;\n      await this.showAlert('Verification Failed', 'Email not yet verified!');\n    }\n  }\n\n  async switch() {\n    await this.router.navigate(['auth-screen']);\n  }\n\n  async resend() {\n    this.isLoading1 = true;\n    await this.ionicAuthService.sendVerificationMail();\n    await this.showAlert('Verification mail sent', 'Please check your inbox or junk for new verification mail.');\n    this.isLoading1 = false;\n  }\n\n  async showAlert(header, message) {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}