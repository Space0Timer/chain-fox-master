{"version":3,"file":"src_app_pages_chat-list_chat-list_module_ts.js","mappings":"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","sources":["./src/app/pages/chat-list/chat-list.page.html","./src/app/shared/components/cards/chat-list/chat-list.component.html","./node_modules/date-fns/esm/getDate/index.js","./node_modules/date-fns/esm/getMonth/index.js","./node_modules/date-fns/esm/getYear/index.js","./src/app/pages/chat-list/chat-list-routing.module.ts","./src/app/pages/chat-list/chat-list.module.ts","./src/app/pages/chat-list/chat-list.page.ts","./src/app/services/chat/chat.service.ts","./src/app/shared/components/cards/chat-list/chat-list.component.ts"],"sourcesContent":["export default \"<ion-header translucent=\\\"true\\\">\\n<ion-toolbar color=\\\"white\\\">\\n  <ion-buttons slot=\\\"start\\\">\\n    <ion-button color=\\\"primary\\\" (click)=\\\"back()\\\" routerDirection=\\\"forward\\\">\\n      <ion-icon name=\\\"chevron-back-outline\\\"></ion-icon>\\n    </ion-button>\\n  </ion-buttons>\\n  <ion-title>\\n    <div class=\\\"title\\\">\\n      <ion-text>Chat</ion-text>\\n    </div>\\n  </ion-title>\\n</ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <div class=\\\"ion-padding\\\">\\n    <ng-container *ngFor=\\\"let chat of chat\\\">\\n      <div>\\n        <app-chat-list-component [chat]=\\\"chat\\\"></app-chat-list-component>\\n      </div>\\n    </ng-container>\\n  </div>\\n\\n\\n\\n</ion-content>\\n\";","export default \"<ion-item (click)=\\\"this.goToChat(chat.name, chat.id)\\\">\\n  <ion-label>\\n    <h2>{{chat.name}}</h2>\\n    <p>{{chat.message}}</p>\\n  </ion-label>\\n  <ion-label slot=\\\"end\\\" class=\\\"ion-text-right\\\">\\n    <p *ngIf=\\\"this.chatService.today\\\">{{chat.time}}</p>\\n    <p *ngIf=\\\"!this.chatService.today\\\">{{chat.date}}</p>\\n    <p>&nbsp;</p>\\n  </ion-label>\\n</ion-item>\\n\";","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * const result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\n\nexport default function getDate(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getFullYear();\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatListPage } from './chat-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatListPageRoutingModule } from './chat-list-routing.module';\n\nimport { ChatListPage } from './chat-list.page';\nimport {ChatListComponent} from \"../../shared/components/cards/chat-list/chat-list.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChatListPageRoutingModule\n  ],\n    declarations: [ChatListPage, ChatListComponent]\n})\nexport class ChatListPageModule {}\n","import { Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Chat} from '../../shared/components/cards/chat-list/chat-list.component';\nimport {AngularFirestore, DocumentData} from '@angular/fire/compat/firestore';\nimport {doc, Firestore, getDoc} from '@angular/fire/firestore';\nimport {AuthService} from '../../services/auth/auth.service';\nimport {ProductService} from '../../services/store/product.service';\nimport firebase from 'firebase/compat/app';\nimport {format} from 'date-fns';\nimport {ChatService} from '../../services/chat/chat.service';\nimport {MenuController} from '@ionic/angular';\n@Component({\n  selector: 'app-chat-list',\n  templateUrl: './chat-list.page.html',\n  styleUrls: ['./chat-list.page.scss'],\n})\nexport class ChatListPage{\n  chat: Chat [] = [\n  ];\n  private id = this.ionicAuthService.getUid();\n  private subscribe: any;\n  constructor(private router: Router,\n              private ionicAuthService: AuthService,\n              private afs: AngularFirestore,\n              private product: ProductService,\n              private firestore: Firestore,\n              private chatService: ChatService,\n              private menu: MenuController) {\n  }\n  async ionViewDidLeave() {\n    await this.menu.enable(true);\n  }\n\n  async ionViewWillEnter() {\n    await this.menu.enable(false);\n    this.chat = [];\n    await this.addChatToChatList();\n  }\n\n  // add individual chat to chat list\n  async addChatToChatList() {\n    let data: DocumentData;\n    const userRef = doc(this.firestore, `messages/${(this.id)}`);\n    // get all conversation partners\n    await getDoc(userRef)\n      .then(snap => {\n        data = snap.data();\n      });\n    // eslint-disable-next-line guard-for-in\n    for (const key in data) {\n      this.chatService.keys.push(key);\n      // get name\n      const nameRef = doc(this.firestore, `users/${(key)}`);\n      await getDoc(nameRef)\n        .then(snap => {\n          data = snap.data();\n        });\n      let username = '';\n      const dataSource = [];\n      // get the messages from database\n      this.subscribe = firebase\n        .firestore()\n        .collection(`messages/${(this.id)}/${(key)}`)\n        .orderBy('createdAt', 'desc')\n        .onSnapshot((docSnapshot) => {\n          docSnapshot.forEach((docu) => {\n            if (data.username !== username) {\n              dataSource.push((docu.data().createdAt.toDate()));\n              this.chat.push({\n                name: data.username,\n                time: format(docu.data().createdAt.toDate(), 'HH:mm'),\n                message: docu.data().msg,\n                date: format(docu.data().createdAt.toDate(), 'yyyy-MM-dd'),\n                id: key\n              });\n              username = data.username;\n            }\n            this.chatService.getDate(dataSource[0]);\n          });\n        });\n    }\n  }\n\n  back() {\n    this.router.navigate(['tabs']);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport firebase from 'firebase/compat/app';\nimport { Observable } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nimport {AngularFirestore} from '@angular/fire/compat/firestore';\nimport {AngularFireAuth} from '@angular/fire/compat/auth';\nimport {doc, Firestore, getDoc, getDocs, query, setDoc, where} from '@angular/fire/firestore';\nimport {getDate, getMonth, getYear} from 'date-fns';\nimport {ProductService} from '../store/product.service';\n\nexport interface User {\n  uid: string;\n  email: string;\n}\n\nexport interface Message {\n  createdAt: firebase.firestore.FieldValue;\n  id: string;\n  from: string;\n  msg: string;\n  fromName: string;\n  myMsg: boolean;\n  status: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ChatService {\n  currentUser: User = null;\n  today: boolean;\n  keys = [];\n  chatName = '';\n  chatId = '';\n  public otherId = '';\n\n  constructor(private afAuth: AngularFireAuth,\n              private afs: AngularFirestore,\n              private product: ProductService,\n              private _firestore: Firestore) {\n    this.afAuth.onAuthStateChanged(user => {\n      this.currentUser = user;\n    });\n  }\n\n  async addChatMessage(msg, idSender, idReceiver) {\n    let msgId = '';\n    await this.afs.collection('messages').doc(idSender).update({\n      [idReceiver]: 1,\n    });\n    await this.afs.collection('messages/' + idSender + '/' + idReceiver).add({\n      msg,\n      from: this.currentUser.uid,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    await this.afs.collection('messages').doc(idReceiver).update({\n      [idSender]: 1,\n    });\n    await this.afs.collection('messages/' + idReceiver + '/' + idSender).add({\n      msg,\n      from: this.currentUser.uid,\n      status: 'sent',\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(docRef => msgId=docRef.id);\n    await this.afs.collection('messages/' + idReceiver  + '/' + idSender).doc(msgId).update({\n      status: 'unread',\n    });\n  }\n\n  getDate(date) {\n    const curDate = new Date();\n    this.today = (getDate(date) ===getDate(curDate) &&\n      getMonth(date) === getMonth(curDate) &&\n      getYear(date) === getYear(curDate));\n  }\n\n  // user chat\n  getChatMessages(idYou, idOthers) {\n    let users = [];\n    return this.getUsers().pipe(\n      switchMap(res => {\n        users = res;\n        // eslint-disable-next-line max-len\n        return this.afs.collection('messages/' + idYou + '/' + idOthers,\n            ref => ref.orderBy('createdAt')).valueChanges({idField: 'id'}) as Observable<Message[]>;\n      }),\n      map(messages => {\n        for (const m of messages) {\n          m.fromName = this.getUserForMsg(m.from, users);\n          m.myMsg = this.currentUser.uid === m.from;\n        }\n        return messages;\n      })\n    );\n  }\n\n  getUsers() {\n    return this.afs.collection('users').valueChanges({ idField: 'uid' }) as Observable<User[]>;\n  }\n\n  getUserForMsg(msgFromId, users: User[]): string {\n    for (const usr of users) {\n      if (usr.uid === msgFromId) {\n        return usr.email;\n      }\n    }\n    return 'Deleted';\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ChatService} from \"../../../../services/chat/chat.service\";\nimport {Router} from \"@angular/router\";\nimport {doc, getDoc} from \"@angular/fire/firestore\";\n\n\nexport interface Chat {\n  name: string;\n  date: string;\n  message: string;\n  time: string;\n  id: string;\n}\n@Component({\n  selector: 'app-chat-list-component',\n  templateUrl: './chat-list.component.html',\n  styleUrls: ['./chat-list.component.scss'],\n})\n\nexport class ChatListComponent implements OnInit {\n  @Input() chat: Chat;\n\n  constructor(private chatService: ChatService, private router: Router) { }\n\n  ngOnInit() {}\n\n  goToChat(name, id) {\n    this.chatService.chatName = name;\n    this.chatService.otherId = id;\n    this.router.navigate(['chat']);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}