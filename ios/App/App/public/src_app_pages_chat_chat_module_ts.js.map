{"version":3,"file":"src_app_pages_chat_chat_module_ts.js","mappings":"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","sources":["./src/app/pages/chat/chat.page.html","./node_modules/date-fns/esm/getDate/index.js","./node_modules/date-fns/esm/getMonth/index.js","./node_modules/date-fns/esm/getYear/index.js","./src/app/pages/chat/chat-routing.module.ts","./src/app/pages/chat/chat.module.ts","./src/app/pages/chat/chat.page.ts","./src/app/services/chat/chat.service.ts"],"sourcesContent":["export default \"<ion-header translucent=\\\"true\\\">\\n<ion-toolbar>\\n  <ion-title color=\\\"primary\\\">\\n    {{this.chatService.chatName}}\\n  </ion-title>\\n  <ion-buttons slot=\\\"start\\\">\\n    <ion-icon (click)=\\\"back()\\\" color=\\\"primary\\\" slot=\\\"icon-only\\\" name=\\\"chevron-back-outline\\\"></ion-icon>\\n  </ion-buttons>\\n</ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\" [fullscreen]=\\\"true\\\">\\n  <ion-grid>\\n    <ion-row *ngFor=\\\"let message of messages | async\\\">\\n      <ion-col size=\\\"9\\\" class=\\\"message\\\" [offset]=\\\"message.myMsg ? 3 : 0\\\"\\n               [ngClass]=\\\"{ 'my-message': message.myMsg, 'other-message': !message.myMsg }\\\">\\n        <b>{{ message.fromName }}</b><br>\\n        <span>{{ message.msg }}\\n    </span>\\n        <div class=\\\"time ion-text-right\\\"><br>{{ message.createdAt?.toMillis() | date:'short' }}</div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\\n\\n<ion-footer>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-row class=\\\"ion-align-items-center\\\">\\n      <ion-col size=\\\"10\\\" >\\n        <ion-textarea color=\\\"dark\\\" class=\\\"message-input\\\" autoGrow=\\\"true\\\" rows=\\\"1\\\" maxLength=\\\"500\\\" [(ngModel)]=\\\"newMsg\\\" >\\n        </ion-textarea>\\n      </ion-col>\\n      <ion-col size=\\\"2\\\">\\n        <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" color=\\\"primary\\\" [disabled]=\\\"newMsg === ''\\\"\\n                    class=\\\"msg-btn\\\" (click)=\\\"sendMessage()\\\">\\n          <ion-icon name=\\\"send\\\" slot=\\\"icon-only\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-toolbar>\\n</ion-footer>\\n\";","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * const result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\n\nexport default function getDate(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getFullYear();\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatPage } from './chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatPageRoutingModule } from './chat-routing.module';\n\nimport { ChatPage } from './chat.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChatPageRoutingModule\n  ],\n  declarations: [ChatPage]\n})\nexport class ChatPageModule {}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {IonContent, MenuController} from '@ionic/angular';\nimport {ChatService, Message} from '../../services/chat/chat.service';\nimport {doc, Firestore, getDoc} from '@angular/fire/firestore';\nimport {ProductService} from '../../services/store/product.service';\nimport {AuthService} from '../../services/auth/auth.service';\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.page.html',\n  styleUrls: ['./chat.page.scss'],\n})\nexport class ChatPage implements OnInit {\n  @ViewChild(IonContent) content: IonContent;\n\n  messages: Observable<Message[]>;\n  newMsg = '';\n  text = true;\n  private id = this.ionicAuthService.getUid();\n\n\n  constructor(private chatService: ChatService, private router: Router,\n              private _firestore: Firestore, private product: ProductService,\n              private menu: MenuController, private ionicAuthService: AuthService) {\n\n  }\n  async ionViewDidLeave() {\n    await this.menu.enable(true);\n  }\n\n  // get all chat messages\n  async ngOnInit() {\n    await this.menu.enable(false);\n    this.messages = this.chatService.getChatMessages(this.id, this.chatService.otherId);\n  }\n\n  // function for the user to send chat message\n  sendMessage() {\n    this.chatService.addChatMessage(this.newMsg, this.id, this.chatService.otherId).then(() => {\n      this.newMsg = '';\n      this.content.scrollToBottom();\n    });\n  }\n\n  back() {\n    this.router.navigate(['chat-list']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport firebase from 'firebase/compat/app';\nimport { Observable } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nimport {AngularFirestore} from '@angular/fire/compat/firestore';\nimport {AngularFireAuth} from '@angular/fire/compat/auth';\nimport {doc, Firestore, getDoc, getDocs, query, setDoc, where} from '@angular/fire/firestore';\nimport {getDate, getMonth, getYear} from 'date-fns';\nimport {ProductService} from '../store/product.service';\n\nexport interface User {\n  uid: string;\n  email: string;\n}\n\nexport interface Message {\n  createdAt: firebase.firestore.FieldValue;\n  id: string;\n  from: string;\n  msg: string;\n  fromName: string;\n  myMsg: boolean;\n  status: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ChatService {\n  currentUser: User = null;\n  today: boolean;\n  keys = [];\n  chatName = '';\n  chatId = '';\n  public otherId = '';\n\n  constructor(private afAuth: AngularFireAuth,\n              private afs: AngularFirestore,\n              private product: ProductService,\n              private _firestore: Firestore) {\n    this.afAuth.onAuthStateChanged(user => {\n      this.currentUser = user;\n    });\n  }\n\n  async addChatMessage(msg, idSender, idReceiver) {\n    let msgId = '';\n    await this.afs.collection('messages').doc(idSender).update({\n      [idReceiver]: 1,\n    });\n    await this.afs.collection('messages/' + idSender + '/' + idReceiver).add({\n      msg,\n      from: this.currentUser.uid,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    await this.afs.collection('messages').doc(idReceiver).update({\n      [idSender]: 1,\n    });\n    await this.afs.collection('messages/' + idReceiver + '/' + idSender).add({\n      msg,\n      from: this.currentUser.uid,\n      status: 'sent',\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(docRef => msgId=docRef.id);\n    await this.afs.collection('messages/' + idReceiver  + '/' + idSender).doc(msgId).update({\n      status: 'unread',\n    });\n  }\n\n  getDate(date) {\n    const curDate = new Date();\n    this.today = (getDate(date) ===getDate(curDate) &&\n      getMonth(date) === getMonth(curDate) &&\n      getYear(date) === getYear(curDate));\n  }\n\n  // user chat\n  getChatMessages(idYou, idOthers) {\n    let users = [];\n    return this.getUsers().pipe(\n      switchMap(res => {\n        users = res;\n        // eslint-disable-next-line max-len\n        return this.afs.collection('messages/' + idYou + '/' + idOthers,\n            ref => ref.orderBy('createdAt')).valueChanges({idField: 'id'}) as Observable<Message[]>;\n      }),\n      map(messages => {\n        for (const m of messages) {\n          m.fromName = this.getUserForMsg(m.from, users);\n          m.myMsg = this.currentUser.uid === m.from;\n        }\n        return messages;\n      })\n    );\n  }\n\n  getUsers() {\n    return this.afs.collection('users').valueChanges({ idField: 'uid' }) as Observable<User[]>;\n  }\n\n  getUserForMsg(msgFromId, users: User[]): string {\n    for (const usr of users) {\n      if (usr.uid === msgFromId) {\n        return usr.email;\n      }\n    }\n    return 'Deleted';\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}