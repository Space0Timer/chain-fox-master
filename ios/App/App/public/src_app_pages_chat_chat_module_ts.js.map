{"version":3,"file":"src_app_pages_chat_chat_module_ts.js","mappings":"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","sources":["./src/app/pages/chat/chat.page.html","./src/app/pages/chat/chat-routing.module.ts","./src/app/pages/chat/chat.module.ts","./src/app/pages/chat/chat.page.ts"],"sourcesContent":["export default \"<ion-header translucent=\\\"true\\\">\\n<ion-toolbar>\\n  <ion-buttons slot=\\\"start\\\">\\n    <ion-menu-button></ion-menu-button>\\n  </ion-buttons>\\n  <ion-title color=\\\"primary\\\">\\n    {{this.storeName}}\\n  </ion-title>\\n  <ion-buttons slot=\\\"start\\\">\\n    <ion-icon (click)=\\\"back()\\\" color=\\\"primary\\\" slot=\\\"icon-only\\\" name=\\\"chevron-back-outline\\\"></ion-icon>\\n  </ion-buttons>\\n</ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\" [fullscreen]=\\\"true\\\">\\n  <ion-grid>\\n    <ion-row *ngFor=\\\"let message of messages | async\\\">\\n      <ion-col size=\\\"9\\\" class=\\\"message\\\" [offset]=\\\"message.myMsg ? 3 : 0\\\"\\n               [ngClass]=\\\"{ 'my-message': message.myMsg, 'other-message': !message.myMsg }\\\">\\n        <b>{{ message.fromName }}</b><br>\\n        <span>{{ message.msg }}\\n    </span>\\n        <div class=\\\"time ion-text-right\\\"><br>{{ message.createdAt?.toMillis() | date:'short' }}</div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\\n\\n<ion-footer>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-row class=\\\"ion-align-items-center\\\">\\n      <ion-col size=\\\"10\\\" >\\n        <ion-textarea color=\\\"dark\\\" class=\\\"message-input\\\" autoGrow=\\\"true\\\" rows=\\\"1\\\" maxLength=\\\"500\\\" [(ngModel)]=\\\"newMsg\\\" >\\n        </ion-textarea>\\n      </ion-col>\\n      <ion-col size=\\\"2\\\">\\n        <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" color=\\\"primary\\\" [disabled]=\\\"newMsg === ''\\\"\\n                    class=\\\"msg-btn\\\" (click)=\\\"sendMessage()\\\">\\n          <ion-icon name=\\\"send\\\" slot=\\\"icon-only\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-toolbar>\\n</ion-footer>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatPage } from './chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatPageRoutingModule } from './chat-routing.module';\n\nimport { ChatPage } from './chat.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChatPageRoutingModule\n  ],\n  declarations: [ChatPage]\n})\nexport class ChatPageModule {}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {IonContent, MenuController} from '@ionic/angular';\nimport {ChatService, Message} from \"../../services/chat.service\";\nimport {doc, Firestore, getDoc} from \"@angular/fire/firestore\";\nimport {ProductService} from \"../../services/cafe/product.service\";\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.page.html',\n  styleUrls: ['./chat.page.scss'],\n})\nexport class ChatPage implements OnInit {\n  @ViewChild(IonContent) content: IonContent;\n\n  messages: Observable<Message[]>;\n  newMsg = '';\n  text = true;\n  private storeName: string;\n\n  constructor(private chatService: ChatService, private router: Router,\n              private _firestore: Firestore, private product: ProductService,\n              private menu: MenuController) {\n    this.menu.enable(false);\n  }\n  async ionViewDidLeave() {\n    await this.menu.enable(true);\n  }\n\n  async ngOnInit() {\n    await this.getStoreName();\n    this.messages = this.chatService.getChatMessagesCafe();\n  }\n\n  async getStoreName() {\n    const ownerRef = doc(this._firestore, `stores/${(this.product.store.name)}`);\n    const ownerSnap = await getDoc(ownerRef);\n    const ownerName = ownerSnap.data();\n    this.storeName = ownerName.name;\n  }\n\n  sendMessage() {\n    this.chatService.addChatMessageCafe(this.newMsg).then(() => {\n      this.chatService.returnChatMessageCafe(this.newMsg);\n      this.newMsg = '';\n      this.content.scrollToBottom();\n    });\n  }\n\n  back() {\n    this.router.navigateByUrl('tabs/home', {replaceUrl: true});\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}